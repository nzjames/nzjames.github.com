<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[James Magness]]></title>
  <link href="http://nzjames.github.com/atom.xml" rel="self"/>
  <link href="http://nzjames.github.com/"/>
  <updated>2013-02-26T04:19:56-05:00</updated>
  <id>http://nzjames.github.com/</id>
  <author>
    <name><![CDATA[James Magness]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Webstock 2013 Day 1]]></title>
    <link href="http://nzjames.github.com/blog/2013/02/14/webstock-2013-day-1/"/>
    <updated>2013-02-14T14:30:00-05:00</updated>
    <id>http://nzjames.github.com/blog/2013/02/14/webstock-2013-day-1</id>
    <content type="html"><![CDATA[<p>Pre webstock there was twitter talk of webstock being expensive.  While not cheap as I can testify paying my own way this year, the value and inspiration from two days immersed with peers and heros is undeniable.  The production value is so polished and the speakers are so well looked after they often clam Webstock is their favourite confrence.</p>

<p>Highlights from day one:</p>

<p>Clay Johnson illustrated all of our ignorance to important local issues and opened our eyes to industrialised media and the damage it is causing society.</p>

<p>Jim Coudal told us to trust our gut and to track our goals not simply set them and don&#8217;t look at them again because when you reach a goal your perspective may hav changed.</p>

<p>Artur Bergman gave the first interesting technical talk however I imagine he could have gone a lot more technical if given the chance.  I think he struck a great balance giving a really practical talk and teaching everyone a few things about CDNs and ways they <em>will</em> make our sites faster.</p>

<p>Chris Coyier gave a really fun run through of his workflow dropping tips and tricks along the way.</p>

<p>Craig Mod gave some great stories on books and publishing and the special place we reserve for our love of literature.  I think he opened our eyes to an emerging industry that is being driven by maturity of blogging and publishing online and showed us some of the ways subcompact publishing is disrupting the incumbents.</p>

<p>Tom Coats picked up where he left off in 2011 for his love of the network and connected things. He gave us insights on why connecting the appliances in our home might be a good idea. He promised twitter clients in all our refrigerators and did the Winnie the Pooh dance.</p>

<p>Day one was choc full of awesome, I haven&#8217;t even mentioned the BNZ  Startup Alley! Day two is about to start and  is set to be amazing.</p>

<p>J</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript Namespace Snippet]]></title>
    <link href="http://nzjames.github.com/blog/2012/12/15/javascript-namespace-snippet/"/>
    <updated>2012-12-15T18:31:00-05:00</updated>
    <id>http://nzjames.github.com/blog/2012/12/15/javascript-namespace-snippet</id>
    <content type="html"><![CDATA[<p>Coming back to JQuery and vanillajs after developing with YUI left me wanting to clean up a lot of code. I found I had no consistant Namespace patten. This has been lifted from the HTML5 mobile boilerplate.</p>

<pre class="codepen" data-height="300" data-type="js" data-href="hkjfy" data-user="nzjames" data-safe="true"><code>/**
 * 2012-11-28 - JRM
 * Simple namespace pattern
 * Seen all over and lifted from HTML5 Mobile Boilerplate
 * https://github.com/h5bp/mobile-boilerplate/blob/master/js/helper.js
 */

(function(document) {

    window.NS = window.NS || {};

    NS.resultNode = document.getElementById('result');

    NS.fn1 = function () {
        NS.resultNode.innerHTML = &quot;Hello Namespace&quot;;
    };

})(document);

NS.fn1();</code></pre>


<script async src="http://codepen.io/assets/embed/ei.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Luumin Development Environment]]></title>
    <link href="http://nzjames.github.com/blog/2012/12/15/my-luumin-development-environment/"/>
    <updated>2012-12-15T15:02:00-05:00</updated>
    <id>http://nzjames.github.com/blog/2012/12/15/my-luumin-development-environment</id>
    <content type="html"><![CDATA[<h2>The Stack</h2>

<p><a href="http://luumin.com">Luumin</a> is the ultimate task list for creative people.  But just being creative <em>and</em> using Luumin isn&#8217;t quite enough to actually build the product.  Here are the tools that I use as the front end lead to get the job done.</p>

<p>The Luumin architecture is a modern LAMP stack, we&#8217;ve swapped out the M(ysql) for Cassandra as the primary data store and built the backend as a platform from day one so all clients connect through our public API.</p>

<p>The stack doesn&#8217;t really explain the front end does it? <strong>Luumin is an HTML5 application built using YUI Framework</strong>, the reason for choosing YUI is <a href="https://dl.dropbox.com/u/8568544/talks/2012/why-yui/index.html#/6">because it is awesome</a>.</p>

<h2>My Workflow</h2>

<p>ssh > screen > vim > builder/shifter > browser > svn</p>

<p>Simple eh?</p>

<p>I do all my development remotely via SSH.  It&#8217;s a habit I picked up while doing Unix server administration a long time ago.  It limits me to work only when I&#8217;ve got connectivity, but I can work on any connection.</p>

<p>GNU Screen is the first thing I fire up every time I connect to the server.  From one session SSH session I usually run three shells, the first for the markup/css, the second for the JavaScript source and the third for compiling the source.  Screen sessions can be disconnected and reconnected to, this means I can sit down at any computer and reconnect exactly where I left off and my development environment is persisted on the  server.</p>

<p>Vim is the second habit I picked up doing Unix admin. I roll with a messy config I&#8217;ve built over the years. I use tabs over buffers. Pathogen for plugin management, and only a few crucial plugins: jslint, nerdtree, vim-less, vim-yui.</p>

<p>Builder is Yahoo&#8217;s legacy Ant build system.  Shifter is the brand new node.js based build system that We&#8217;re migrating to.  Lint code, build modules, strip console logs, minify source.</p>

<p>Chrome current is my browser of choice.  It&#8217;s been my primary development browser for about two years.  The development tools are just better.  I spend most of my time switching between Network and Source tabs always with the console underneith.</p>

<p>Still on SVN, locally hosted.  Simple deploy workflow only deploying the minified built source to production.</p>

<h2>Hardware</h2>

<p>I dev on a 2008 Macbook at home and an Ubuntu 12.10 workstation at the office. Hardware doesn&#8217;t really matter. Because my workflow is all based on the server, give me a network connection, an SSH client and a browser and I&#8217;m happy.</p>

<hr />

<p>So that&#8217;s my setup.  It varies on other projects, my PHP dev which has historically been done in Vim has moved exclusivly to NetBeans for need of the debugger.  Other side project are very similar to this but won&#8217;t necessarily have the build phase and are probably in a git repo.</p>
]]></content>
  </entry>
  
</feed>
